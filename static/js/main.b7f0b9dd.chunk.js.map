{"version":3,"sources":["components/HeroComponentV2.js","App.js","reportWebVitals.js","index.js"],"names":["HeroComponentV2","className","this","props","width","style","backgroundColor","border","borderRadius","color","cursor","fontSize","fontWeight","outline","padding","textDecoration","to","path","zIndex","url","Component","getWindowDimensions","window","innerWidth","height","innerHeight","App","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","params","particles","value","line_linked","number","size","position","top","left","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wTA8DeA,EA1Df,4JACE,WACE,OACE,sBAAKC,UAAU,iBAAf,UACGC,KAAKC,MAAMC,OAAS,IACnB,qBAAKH,UAAU,kBAAf,SACE,6CAEA,KACJ,sBAAKA,UAAU,YAAf,UACE,4DACA,qBAAKA,UAAU,uBAAf,SACE,mQAOF,qBAAKA,UAAU,mBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEI,MAAO,CACLC,gBAAiB,UACjBC,OAAQ,OACRC,aAAc,OACdC,MAAO,QACPC,OAAQ,UACRC,SAAU,OACVC,WAAY,OACZC,QAAS,OACTC,QAAS,OACTC,eAAgB,QAElBC,GAAG,QAbL,8BAiBA,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,QAAZ,SACE,qBAAKZ,MAAO,CAAEa,OAAQ,KAAMZ,gBAAiB,OAA7C,SACE,cAAC,qBAAD,CAAoBa,IAAI,+DAOnCjB,KAAKC,MAAMC,OAAS,IACnB,qBAAKH,UAAU,kBAAf,SACE,6CAEA,YApDZ,GAAqCmB,a,iBCGrC,SAASC,IACP,MAAmDC,OACnD,MAAO,CACLlB,MAFF,EAAQmB,WAGNC,OAHF,EAA2BC,aAqEdC,MA7Cf,WACE,IAAQtB,EAlBV,WACE,MAAgDuB,mBAC9CN,KADF,mBAAOO,EAAP,KAAyBC,EAAzB,KAaA,OATAC,qBAAU,WACR,SAASC,IACPF,EAAoBR,KAItB,OADAC,OAAOU,iBAAiB,SAAUD,GAC3B,kBAAMT,OAAOW,oBAAoB,SAAUF,MACjD,IAEIH,EAIWM,GAAV9B,MAER,OACE,sBAAKH,UAAU,MAAf,UACGG,GAAS,IACR,qCACE,qBAAKC,MAAO,CAAEmB,OAAQ,UACtB,cAAC,IAAD,CACEW,OAAQ,CACNC,UAAW,CACT3B,MAAO,CACL4B,MAAO,WAETC,YAAa,CACX7B,MAAO,CACL4B,MAAO,YAGXE,OAAQ,CACNF,MAAO,IAETG,KAAM,CACJH,MAAO,OAIZ,OAEH,KACJ,qBACEhC,MAAO,CACLoC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNvC,MAAO,OACPoB,OAAQ,QANZ,SASE,cAAC,EAAD,CAAiBpB,MAAOA,UC3DjBwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b7f0b9dd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Link, Switch, Route } from \"react-router-dom\";\nimport { ReactTypeformEmbed } from \"react-typeform-embed\";\n\nexport class HeroComponentV2 extends Component {\n  render() {\n    return (\n      <div className=\"hero-container\">\n        {this.props.width <= 810 ? (\n          <div className=\"asset-container\">\n            <h2>diffusion</h2>\n          </div>\n        ) : null}\n        <div className=\"hero-copy\">\n          <h1>It Pays To Have Good Taste</h1>\n          <div className=\"subheading-container\">\n            <h4>\n              Join the space where creatives like you can share their favorite\n              content while building and earning from an authentic community.\n              One way to handle content overload is by personalizing inspiring\n              content based on your niches.\n            </h4>\n          </div>\n          <div className=\"button-container\">\n            <Router>\n              <Link\n                style={{\n                  backgroundColor: \"#00b1d2\",\n                  border: \"none\",\n                  borderRadius: \"15px\",\n                  color: \"white\",\n                  cursor: \"pointer\",\n                  fontSize: \"20px\",\n                  fontWeight: \"bold\",\n                  outline: \"none\",\n                  padding: \"20px\",\n                  textDecoration: \"none\",\n                }}\n                to=\"/form\"\n              >\n                Become a Curator\n              </Link>\n              <Switch>\n                <Route path=\"/form\">\n                  <div style={{ zIndex: \"10\", backgroundColor: \"red\" }}>\n                    <ReactTypeformEmbed url=\"https://hjv8msq3gnt.typeform.com/to/Gdq3kNQl\" />\n                  </div>\n                </Route>\n              </Switch>\n            </Router>\n          </div>\n        </div>\n        {this.props.width >= 810 ? (\n          <div className=\"asset-container\">\n            <h2>diffusion</h2>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default HeroComponentV2;\n","// import \"./App.css\";\nimport \"./AppV2.css\";\nimport { useState, useEffect } from \"react\";\n// import HeroComponent from \"./components/HeroComponent\";\nimport HeroComponentV2 from \"./components/HeroComponentV2\";\nimport Particles from \"react-particles-js\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nfunction App() {\n  const { width } = useWindowDimensions();\n\n  return (\n    <div className=\"App\">\n      {width >= 810 ? (\n        <>\n          <div style={{ height: \"50px\" }} />\n          <Particles\n            params={{\n              particles: {\n                color: {\n                  value: \"#00b1d2\",\n                },\n                line_linked: {\n                  color: {\n                    value: \"#FDDB27\",\n                  },\n                },\n                number: {\n                  value: 50,\n                },\n                size: {\n                  value: 3,\n                },\n              },\n            }}\n          />{\" \"}\n        </>\n      ) : null}\n      <div\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n        }}\n      >\n        <HeroComponentV2 width={width} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}